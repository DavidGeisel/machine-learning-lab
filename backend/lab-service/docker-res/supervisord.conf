; supervisor config file

[unix_http_server]
file=/var/run/supervisor.sock   ; (the path to the socket file)
chmod=0700                       ; sockef file mode (default 0700)

[supervisord]
nodaemon=true
logfile=/var/log/supervisor/supervisord.log ; (main log file;default $CWD/supervisord.log)
pidfile=/var/run/supervisord.pid ; (supervisord pidfile;default supervisord.pid)
childlogdir=/var/log/supervisor            ; ('AUTO' child log dir, default $TEMP)
loglevel=info                ; (log level;default info; others: debug,warn,trace)
user=root ; set user to root

; the below section must remain in the config file for RPC
; (supervisorctl/web interface) to work, additional interfaces may be
; added by defining them in separate rpcinterface: sections
[rpcinterface:supervisor]
supervisor.rpcinterface_factory = supervisor.rpcinterface:make_main_rpcinterface

[supervisorctl]
serverurl=unix:///var/run/supervisor.sock ; use a unix:// URL  for a unix socket

; The [include] section can just contain the "files" setting.  This
; setting can list multiple files (separated by whitespace or
; newlines).  It can also contain wildcards.  The filenames are
; interpreted as relative to this file.  Included files *cannot*
; include files themselves.

[program:rsyslog]
command=/usr/sbin/rsyslogd -n
priority=49
redirect_stderr=true 
stdout_logfile=/var/log/supervisor/%(program_name)s.log ; log logs into file
autostart=true ; start at supervisord start (default: true)
autorestart=true ; whether/when to restart (default: unexpected) 
startretries=5   ; max # of serial start failures (default 3)

[program:nginx]
command=/usr/local/openresty/nginx/sbin/nginx -p %(ENV__RESOURCES_PATH)s/nginx/ -c %(ENV__NGINX_CONFIG_PATH)s -g "daemon off;"
priority=50
redirect_stderr=true 
;stdout_logfile=/var/log/supervisor/%(program_name)s.log ; log logs into file
stdout_logfile=/proc/1/fd/1 ; log error into stdout to see in docker logs
stdout_logfile_maxbytes=0
autostart=true ; start at supervisord start (default: true)
autorestart=true ; whether/when to restart (default: unexpected) 
startretries=5   ; max # of serial start failures (default 3)

[program:sshd]
command=env -i /usr/local/sbin/sshd -D -e -f /etc/ssh/sshd_config
; use env -i to reset the environment, because otherwise too many environment variables might prevent a client from connecting
; problem is mainly with Kubernetes, since it creates multiple environment variables for every service if enableServiceLinks is not set
priority=52
redirect_stderr=true 
stdout_logfile=/var/log/supervisor/%(program_name)s.log ; log logs into file
autostart=true ; start at supervisord start (default: true)
autorestart=true ; whether/when to restart (default: unexpected) 
startretries=5   ; max # of serial start failures (default 3)


[program:lab]
command=java %(ENV_JAVA_OPTS)s -jar %(ENV__RESOURCES_PATH)s/service.jar
priority=54
autostart=true
autorestart=true
redirect_stderr=true 
stdout_logfile=/proc/1/fd/1 ; log error into stdout to see in docker logs
stdout_logfile_maxbytes=0
startretries=5   ; max # of serial start failures (default 3)
