/*
 * ML Lab Service
 * Functionality to create and manage Lab projects, services, datasets, models, and experiments.
 *
 * OpenAPI spec version: 2.2.0-SNAPSHOT
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.15
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient', 'model/ExperimentResources', 'model/GitInfo', 'model/HostInfo'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'), require('./ExperimentResources'), require('./GitInfo'), require('./HostInfo'));
  } else {
    // Browser globals (root is window)
    if (!root.MlLabService) {
      root.MlLabService = {};
    }
    root.MlLabService.LabExperiment = factory(root.MlLabService.ApiClient, root.MlLabService.ExperimentResources, root.MlLabService.GitInfo, root.MlLabService.HostInfo);
  }
}(this, function(ApiClient, ExperimentResources, GitInfo, HostInfo) {
  'use strict';

  /**
   * The LabExperiment model module.
   * @module model/LabExperiment
   * @version 2.2.0-SNAPSHOT
   */

  /**
   * Constructs a new <code>LabExperiment</code>.
   * @alias module:model/LabExperiment
   * @class
   */
  var exports = function() {
  };

  /**
   * Constructs a <code>LabExperiment</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/LabExperiment} obj Optional instance to populate.
   * @return {module:model/LabExperiment} The populated <code>LabExperiment</code> instance.
   */
  exports.constructFromObject = function(data, obj) {
    if (data) {
      obj = obj || new exports();
      if (data.hasOwnProperty('key'))
        obj.key = ApiClient.convertToType(data['key'], 'String');
      if (data.hasOwnProperty('groupKey'))
        obj.groupKey = ApiClient.convertToType(data['groupKey'], 'String');
      if (data.hasOwnProperty('name'))
        obj.name = ApiClient.convertToType(data['name'], 'String');
      if (data.hasOwnProperty('operator'))
        obj.operator = ApiClient.convertToType(data['operator'], 'String');
      if (data.hasOwnProperty('scriptName'))
        obj.scriptName = ApiClient.convertToType(data['scriptName'], 'String');
      if (data.hasOwnProperty('scriptType'))
        obj.scriptType = ApiClient.convertToType(data['scriptType'], 'String');
      if (data.hasOwnProperty('project'))
        obj.project = ApiClient.convertToType(data['project'], 'String');
      if (data.hasOwnProperty('startedAt'))
        obj.startedAt = ApiClient.convertToType(data['startedAt'], 'Number');
      if (data.hasOwnProperty('finishedAt'))
        obj.finishedAt = ApiClient.convertToType(data['finishedAt'], 'Number');
      if (data.hasOwnProperty('updatedAt'))
        obj.updatedAt = ApiClient.convertToType(data['updatedAt'], 'Number');
      if (data.hasOwnProperty('duration'))
        obj.duration = ApiClient.convertToType(data['duration'], 'Number');
      if (data.hasOwnProperty('status'))
        obj.status = ApiClient.convertToType(data['status'], 'String');
      if (data.hasOwnProperty('command'))
        obj.command = ApiClient.convertToType(data['command'], 'String');
      if (data.hasOwnProperty('tags'))
        obj.tags = ApiClient.convertToType(data['tags'], ['String']);
      if (data.hasOwnProperty('note'))
        obj.note = ApiClient.convertToType(data['note'], 'String');
      if (data.hasOwnProperty('clientVersion'))
        obj.clientVersion = ApiClient.convertToType(data['clientVersion'], 'String');
      if (data.hasOwnProperty('git'))
        obj.git = GitInfo.constructFromObject(data['git']);
      if (data.hasOwnProperty('host'))
        obj.host = HostInfo.constructFromObject(data['host']);
      if (data.hasOwnProperty('dependencies'))
        obj.dependencies = ApiClient.convertToType(data['dependencies'], ['String']);
      if (data.hasOwnProperty('resources'))
        obj.resources = ExperimentResources.constructFromObject(data['resources']);
      if (data.hasOwnProperty('parameters'))
        obj.parameters = ApiClient.convertToType(data['parameters'], {'String': Object});
      if (data.hasOwnProperty('metrics'))
        obj.metrics = ApiClient.convertToType(data['metrics'], {'String': Object});
      if (data.hasOwnProperty('others'))
        obj.others = ApiClient.convertToType(data['others'], {'String': Object});
      if (data.hasOwnProperty('result'))
        obj.result = ApiClient.convertToType(data['result'], 'String');
    }
    return obj;
  }

  /**
   * @member {String} key
   */
  exports.prototype.key = undefined;

  /**
   * @member {String} groupKey
   */
  exports.prototype.groupKey = undefined;

  /**
   * @member {String} name
   */
  exports.prototype.name = undefined;

  /**
   * @member {String} operator
   */
  exports.prototype.operator = undefined;

  /**
   * @member {String} scriptName
   */
  exports.prototype.scriptName = undefined;

  /**
   * @member {String} scriptType
   */
  exports.prototype.scriptType = undefined;

  /**
   * @member {String} project
   */
  exports.prototype.project = undefined;

  /**
   * @member {Number} startedAt
   */
  exports.prototype.startedAt = undefined;

  /**
   * @member {Number} finishedAt
   */
  exports.prototype.finishedAt = undefined;

  /**
   * @member {Number} updatedAt
   */
  exports.prototype.updatedAt = undefined;

  /**
   * @member {Number} duration
   */
  exports.prototype.duration = undefined;

  /**
   * @member {String} status
   */
  exports.prototype.status = undefined;

  /**
   * @member {String} command
   */
  exports.prototype.command = undefined;

  /**
   * @member {Array.<String>} tags
   */
  exports.prototype.tags = undefined;

  /**
   * @member {String} note
   */
  exports.prototype.note = undefined;

  /**
   * @member {String} clientVersion
   */
  exports.prototype.clientVersion = undefined;

  /**
   * @member {module:model/GitInfo} git
   */
  exports.prototype.git = undefined;

  /**
   * @member {module:model/HostInfo} host
   */
  exports.prototype.host = undefined;

  /**
   * @member {Array.<String>} dependencies
   */
  exports.prototype.dependencies = undefined;

  /**
   * @member {module:model/ExperimentResources} resources
   */
  exports.prototype.resources = undefined;

  /**
   * @member {Object.<String, Object>} parameters
   */
  exports.prototype.parameters = undefined;

  /**
   * @member {Object.<String, Object>} metrics
   */
  exports.prototype.metrics = undefined;

  /**
   * @member {Object.<String, Object>} others
   */
  exports.prototype.others = undefined;

  /**
   * @member {String} result
   */
  exports.prototype.result = undefined;

  return exports;

}));
