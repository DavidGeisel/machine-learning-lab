/*
 * ML Lab Service
 * Functionality to create and manage Lab projects, services, datasets, models, and experiments.
 *
 * OpenAPI spec version: 2.2.0-SNAPSHOT
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.15
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient', 'model/LabFile'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'), require('./LabFile'));
  } else {
    // Browser globals (root is window)
    if (!root.MlLabService) {
      root.MlLabService = {};
    }
    root.MlLabService.LabFileCollection = factory(root.MlLabService.ApiClient, root.MlLabService.LabFile);
  }
}(this, function(ApiClient, LabFile) {
  'use strict';

  /**
   * The LabFileCollection model module.
   * @module model/LabFileCollection
   * @version 2.2.0-SNAPSHOT
   */

  /**
   * Constructs a new <code>LabFileCollection</code>.
   * @alias module:model/LabFileCollection
   * @class
   */
  var exports = function() {
  };

  /**
   * Constructs a <code>LabFileCollection</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/LabFileCollection} obj Optional instance to populate.
   * @return {module:model/LabFileCollection} The populated <code>LabFileCollection</code> instance.
   */
  exports.constructFromObject = function(data, obj) {
    if (data) {
      obj = obj || new exports();
      if (data.hasOwnProperty('labFiles'))
        obj.labFiles = ApiClient.convertToType(data['labFiles'], [LabFile]);
      if (data.hasOwnProperty('fileCount'))
        obj.fileCount = ApiClient.convertToType(data['fileCount'], 'Number');
      if (data.hasOwnProperty('totalSize'))
        obj.totalSize = ApiClient.convertToType(data['totalSize'], 'Number');
      if (data.hasOwnProperty('lastModified'))
        obj.lastModified = ApiClient.convertToType(data['lastModified'], 'Number');
      if (data.hasOwnProperty('aggregatedVersions'))
        obj.aggregatedVersions = ApiClient.convertToType(data['aggregatedVersions'], 'Boolean');
    }
    return obj;
  }

  /**
   * @member {Array.<module:model/LabFile>} labFiles
   */
  exports.prototype.labFiles = undefined;

  /**
   * @member {Number} fileCount
   */
  exports.prototype.fileCount = undefined;

  /**
   * @member {Number} totalSize
   */
  exports.prototype.totalSize = undefined;

  /**
   * @member {Number} lastModified
   */
  exports.prototype.lastModified = undefined;

  /**
   * @member {Boolean} aggregatedVersions
   */
  exports.prototype.aggregatedVersions = undefined;

  return exports;

}));
